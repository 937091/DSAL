#define Max 10
#include<iostream>
#include<queue>
using namespace std;
class OBST
{
public:
int n,i,j,k;
int p[Max],q[Max],W[Max][Max],C[Max][Max],r[Max][Max];
string S[Max];
void read()
{
cout<<"\n enter the no.of keys:";
cin>>n;
cout<<"\n enter the keys:";
for(i=1;i<=n;i++)
{
cin>>S[i];
}
cout<<"\n enter the values of successor:";
for(i=1;i<=n;i++)
{
cin>>p[i];
}
cout<<"\n enter the values of unsuccessor:";
for(i=0;i<=n;i++)
{
cin>>q[i];
}
}
void display()
{
cout<<"\n The 1keys are:";
for(i=0;i<n;i++)
{
cout<<S[i]<<" ";
}
cout<<"\n the successor are:";
for(i=1;i<=n;i++)
{
cout<<p[i]<<" ";
}
cout<<"\n the unsuccessor are:";
for(i=0;i<=n;i++)
{
cout<<q[i]<<" ";
}
}
void create()
{
cout<<"\n For differnce 0:"<<endl;
cout<<"\n Weights"<<"\t\t"<<"cost"<<"\t\t"<<"Root"<<endl;
for(i=0;i<=n;i++)
{
W[i][i]=q[i];
C[i][i]=0;
r[i][i]=0;
cout<<W[i][i]<<"\t\t\t"<<C[i][i]<<"\t\t\t"<<r[i][i]<<endl;
}
cout<<"\n For differnce 1:"<<endl;
cout<<"\n Weights"<<"\t\t"<<"cost"<<"\t\t"<<"Root"<<endl;
for(i=0;i<n;i++)
{
int j=i+1;
W[i][j]=p[j]+q[j]+W[i][j-1];
C[i][j]=W[i][j];
r[i][j]=j;
cout<<W[i][j]<<"\t\t"<<C[i][j]<<"\t\t"<<r[i][j]<<endl;
}
for(int d=2;d<=n;d++)
{
cout<<"\n for difference "<<d<<":";
cout<<"\n Weight"<<"\t\t\t"<<"Cost"<<"\t\t\t"<<"Root"<<endl;
for(i=0;i+d<=n;i++)
{
int j=i+d;
W[i][j]=p[j]+q[j]+W[i][j-1];
int k=minCost(i,j);
C[i][j]=W[i][j]+C[i][k-1]+C[k][j];
r[i][j]=k;
cout<<W[i][j]<<"\t\t"<<C[i][j]<<"\t\t"<<r[i][j]<<endl;
}
}
}
int minCost(int i,int j)
{
int min=999,h;
for(int k=i+1;k<=j;k++)
{
int cost=C[i][k-1]+C[k][j];
if(cost<min)
{
min=cost;
h=k;
}
}
return h;
}
void display1()
{
queue<int>q1;
q1.push(0);
q1.push(n);
cout<<"\n Root"<<"\t\t\t"<<"Leô€…Œ child"<<"\t\t\t\t"<<"Right Child"<<endl;
while(!q1.empty())
{
i=q1.front();
q1.pop();
j=q1.front();
q1.pop();
cout<<"\n"<<S[r[i][j]];
k=r[i][j];
if(r[i][k-1]==0)
{
cout<<"\t\t\t"<<"NULL";
}
else
{
cout<<"\t\t\t"<<S[r[i][k-1]];
q1.push(i);
q1.push(k-1);
}
if(r[k][j]==0)
{
cout<<"\t\t\t"<<"\t\t\t"<<"NULL";
}
else
{
cout<<"\t\t\t"<<"\t\t\t"<<S[r[k][j]];
q1.push(k);
q1.push(j);
}
}
}
};
int main()
{
OBST ob;
ob.read();
ob.create();
ob.display1();
return 0;
}
